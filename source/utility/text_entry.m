function [handle] = text_entry(tag, label, initvalue, fieldwidth, textw, x, y, id, type)
% text_entry.m - make a textbox with a label
% tag is the tag applied to the text box; 't_tag' is applied to the label for the box
% These should be unique. If they are not, the program will notify you (correction involves
% changing the fields generated by create_element in new.m
% label is the label for the box (usually the command that modifies the box)
% initvalue is the value to place in the box
% fieldwidth sets the total width of the field (includes label and box contents)
% textw sets the width of the box
% x and y are the position, in character units...
% 1999-2000
% Paul B. Manis, Ph.D.
% pmanis@med.unc.edu
%
if(nargin < 9)
    type = 1; % normal editable type
end;

handle = [];
fontsize = 10;
fontname = 'Arial';

b_ht = 1.3; % standard field height in characters
pad_static=3;
pad_edit=4;
lab2=label;
while(length(lab2) <= textw)
    lab2 = [lab2 ' ']; %#ok<AGROW>
end;
fwtitle = textw + pad_static; % length(lab2); %+pad_static;
fwarg = fieldwidth - fwtitle - x;

% note - although the callback routine is set up here,
% we don't use it anymore. There is no direct edit allowed on the field
% cmd_struct handles the commands to the field.
% cb = sprintf('struct_edit(''EditDispatch'',''%s'');', label); % set up the callback routine


tag2 = ['t_' id '_' tag]; % make title tag
h1 = findobj('Tag', tag2); % find existing tags
if(length(h1) > 1) % too many? (one and only one allowed)
    QueMessage(sprintf('text_entry: title tag %s has more than one instance', tag2), 1);
    return;
end;
% list the title tags here:
if(isempty(h1)) % none by that name, so its ok to create one
    h1 = uicontrol('Units','characters', ...
        'ListboxTop',0, ...
        'Position',[x y fwtitle b_ht], ...
        'HorizontalAlignment','right', ...
        'Style','text', ...
        'FontSize', fontsize, ...
        'FontName', fontname, ...
        'BackgroundColor', [0.15 0.15 0.15], ...
        'ForegroundColor', [1 1 1], ...
        'Tag', tag2);
end;
set(h1, 'String',[' ', label, ' ']); % set the label

tagd = ['d_', id, '_', tag];
handle = findobj('Tag', tagd); % look for existing tags
if(length(handle) > 1) % one and only one allowed
    QueMessage(sprintf('text_entry: handle tag %s has more than one instance', tag), 1);
    return;
end;
% replaced fwarg with length(initvalue) below...
if(isempty(handle)) % none? then create it
if(type <= 0) % not editable - so mark it as such
    bkcolor = [0.07 0.07 0.07]; % Dark gray background
    fgcolor = 'yellow'; % yellow foreground;
else
    bkcolor = [0 0 0.25];
    fgcolor = 'green'; % editable - green foreground
end;

    handle = uicontrol('Units','characters', ...
        'ListboxTop',0, ...
        'background', bkcolor, ...
        'foreground', fgcolor, ...
        'Position',[x+fwtitle+1 y  fwarg b_ht], ...
        'HorizontalAlignment','left', ...
        'Max', 1, ...
        'Min', 0, ...
        'Style', 'text', ...
        'FontSize', fontsize, ...
        'FontName', fontname, ... %   'Callback', cb, ... % this gets us an input to update the structure..
        'Tag',tagd);
    % turn all displays into STRINGS - we must pull them back later...
end;
set(handle, 'String', ['  ', initvalue]); % install the data
handle = [handle h1]; % return both handles.
return

